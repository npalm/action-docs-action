name: 'CI'
on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20]
    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # ratchet:actions/checkout@v3
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # ratchet:actions/setup-node@v3
        with:
          node-version: 20

      # build and test action
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check format and lint
        run: yarn run format-check && yarn lint

      - name: Build and package
        run: yarn build && yarn run package

      - name: Update docs
        uses: './'
        with:
          tocLevel: 1

      - name: Update dist in the repository
        if: github.ref != 'refs/heads/main'

        uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842 # ratchet:stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: 'chore(ci): Updating dist and docs'
          file_pattern: 'dist/* README.md'

      - name: Create Pull Request (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@6d6857d36972b65feb161a90e484f2984215f83e # ratchet:peter-evans/create-pull-request@v6.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(ci): Updating dist and docs'
          title: 'chore(ci): Updating dist and docs'
          branch: update-docs
          branch-suffix: random
          base: ${{ github.event.pull_request.base.ref }}
          delete-branch: true

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get app installation token
        uses: npalm/action-app-token@dd4bb16d91ced5659bc618705c96b822c5a42136 # v1.1.0
        id: app-token
        with:
          appId: ${{ vars.APP_ID }}
          appPrivateKeyBase64: ${{ secrets.APP_PRIVATE_KEY_BASE64 }}
          appInstallationType: repo
          appInstallationValue: ${{ github.repository }}

      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # ratchet:actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Release
        uses: google-github-actions/release-please-action@a37ac6e4f6449ce8b3f7607e4d97d0146028dc0b # ratchet:google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ steps.app-token.outputs.token }}
          release-type: simple
          next-version: v2.0.0
          last-release-sha: b62a69e27ae389aa92b450f647d37409b9277bf0

      - name: tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name semantic-releaser[bot]
          git config user.email 102556+semantic-releaser[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ steps.app-token.outputs.token }}@github.com/npalm/action-docs-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
